{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","prototype","PropTypes","number","isRequired","string","geners","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAIA,SAASA,EAAT,GAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAEjD,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,SAMRd,EAAMe,UAAY,CAChBd,GAAIe,IAAUC,OAAOC,WACrBhB,KAAMc,IAAUC,OAAOC,WACvBf,MAAOa,IAAUG,OAAOD,WACxBd,QAASY,IAAUG,OAAOD,WAC1Bb,OAAQW,IAAUG,OAAOD,WACzBE,OAAQJ,IAAUK,QAAQL,IAAUG,QAAQD,YAG/BlB,QC+GAsB,G,kNA/EbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,kEAcVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASlB,UAAU,aAChBiB,EACC,yBAAKjB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZkB,EAAOf,KAAI,SAACuB,GAAD,OACV,kBAAC,EAAD,CACEpB,IAAKoB,EAAMhC,GACXA,GAAIgC,EAAMhC,GACVC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,kB,GA1CZ6B,IAAMC,YC7DxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5dff9334.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  //console.log({ title });\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  geners: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n//import PropTypes from \"prop-types\";\n\n/*\nfunction Food({ name, city, rating}){\n  //console.log({ name });\n  return <div>\n      <h1>I like { name }.</h1>\n      <h2>in { city }</h2>\n      <h4>{rating}/5.0</h4>\n    </div>\n}\n\n// Food argument validation\n// Name is only propTypes\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\n\nconst foodILike = [{\n  id:1,\n  name: \"kimchi\",\n  city: \"korea\",\n  rating: 5\n},\n{\n  id:2,\n  name: \"ramen\",\n  city: \"japan\",\n  rating: 4.3\n},\n{\n  id:3,\n  name: \"chukumi\",\n  city: \"china\",\n  rating: 3\n}\n];\n*/\n/*\nNot Good\nfunction renderFood(dish){\n  return <Food name={dish.name} city={dish.city}/>\n};\n\nreturn <div>{foodILike.map(renderFood)}</div>;\n*/\n/*\nfunction App() {\n  return( \n  <div>\n    {foodILike.map(dish => (\n      <Food key={dish.id} name = {dish.name} city = {dish.city} rating ={dish.rating}/>\n    ))}\n  </div>\n  );\n}\n*/\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  //axios는 항상 빠르지 않다 > 그래서 늦는다는걸 함수에게 알려야함(await)\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n    //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //console.log(movies.data.data.movies);\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Lodaing...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n\n  // object\n  //state를 사용하면 나중에 문제가 생길 수 있음\n  /*\n  state = {\n    count: 0\n  };\n  //setState > state refresh > render function setState 사용하지 않으면 render 호출이 안됨.\n  add = () => {\n    //console.log(\"add\")\n    //this.setState({count: this.state.count + 1}) //not Recommand\n    this.setState(current => ({count: this.state.count + 1}))\n  };\n  minus = () => {\n    //console.log(\"minus\")\n    this.setState(current => ({count: this.state.count - 1}))\n  };\n  componentDidMount(){\n\n  }\n  render(){\n    return( <div>\n      <h1>The number is: {this.state.count}</h1>\n      <button onClick={this.add}>Add</button>\n      <button onClick={this.minus}>Minus</button>\n      </div>\n    );\n  }*/\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}